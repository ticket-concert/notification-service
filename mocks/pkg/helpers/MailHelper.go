// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	helpers "notification-service/internal/pkg/helpers"

	mock "github.com/stretchr/testify/mock"
)

// MailHelper is an autogenerated mock type for the MailHelper type
type MailHelper struct {
	mock.Mock
}

// SendEmail provides a mock function with given fields: payload
func (_m *MailHelper) SendEmail(payload helpers.MailRequest) error {
	ret := _m.Called(payload)

	if len(ret) == 0 {
		panic("no return value specified for SendEmail")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(helpers.MailRequest) error); ok {
		r0 = rf(payload)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMailHelper creates a new instance of MailHelper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMailHelper(t interface {
	mock.TestingT
	Cleanup(func())
}) *MailHelper {
	mock := &MailHelper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
